name: Build Linux Release Using docker

on:
  workflow_dispatch:
    inputs:
      tags:
        description: "Version tags"

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      # DockerFile
      # https://github.com/wwsheng009/yao/blob/main/docker/build-custom/Dockerfile
      image: wwsheng009/yao-build:latest

    steps:
      - name: Build
        run: |
          export PATH=$PATH:/github/home/go/bin
          /app/build.sh
          ls -l /data

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Get Version
        run: |
          echo VERSION=$(cat share/const.go  |grep 'const VERSION' | awk '{print $4}' | sed "s/\"//g")  >> $GITHUB_ENV

      - name: Tar files (arm64)
        run: |
          mv /data/yao-$VERSION-unstable-linux-arm64 /data/yao-$VERSION-linux-arm64
          tar -czvf yao-${{ env.VERSION }}-linux-arm64.tar.gz -C /data yao-$VERSION-linux-arm64

      - name: Tar files (amd64)
        run: |
          mv /data/yao-$VERSION-unstable-linux-amd64 /data/yao-$VERSION-linux-amd64
          tar -czvf yao-${{ env.VERSION }}-linux-amd64.tar.gz -C /data yao-$VERSION-linux-amd64

      - name: Archive production artifacts (arm64)
        uses: actions/upload-artifact@v4
        with:
          name: yao-linux-arm64
          path: yao-${{ env.VERSION }}-linux-arm64.tar.gz

      - name: Archive production artifacts (amd64)
        uses: actions/upload-artifact@v4
        with:
          name: yao-linux-amd64
          path: yao-${{ env.VERSION }}-linux-amd64.tar.gz

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: yao-${{ env.VERSION }}
          files: |
            yao-${{ env.VERSION }}-linux-arm64.tar.gz
            yao-${{ env.VERSION }}-linux-amd64.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Release URL
        run: |
          echo "Release URL: ${{ steps.create_release.outputs.upload_url }}"