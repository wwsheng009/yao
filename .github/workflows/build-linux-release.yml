name: Build Linux Release

on:
  workflow_dispatch:
    inputs:
      tags:
        description: "Version tags"

jobs:
  build:
    strategy:
      matrix:
        go: [1.21.1]
    runs-on: "ubuntu-23.04"
    steps:
      - name: Arm Build
        run: |
          sudo apt-get update
          sudo apt-get install -y llibc6-armel-cross libc6-dev-armel-cross binutils-arm-linux-gnueabi libncurses5-dev build-essential bison flex libssl-dev bc
          sudo apt-get install -y gcc-arm-linux-gnueabi g++-arm-linux-gnueabi
          sudo apt-get install -y gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf
          sudo apt-get install -y g++-aarch64-linux-gnu crossbuild-essential-arm64
          sudo apt-get install -y gcc-13-aarch64-linux-gnu
          sudo apt-get install -y g++-13-aarch64-linux-gnu
          sudo apt-get install -y wget
          sudo apt-get install -y curl
          sudo apt-get install -y git

      - name: Inspect Tools
        run: |
          ls -l /usr/lib/gcc-cross/aarch64-linux-gnu/
      
      - name: Git lfs
        run: |
          curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash
          apt-get install -y git-lfs
          git lfs install
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Setup Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Checkout Kun
        uses: actions/checkout@v3
        with:
          repository: wwsheng009/kun
          path: kun

      - name: Checkout Xun
        uses: actions/checkout@v3
        with:
          repository: wwsheng009/xun
          path: xun

      - name: Checkout Gou
        uses: actions/checkout@v3
        with:
          repository: wwsheng009/gou
          # ref: dc3d98411f61e21cf775e4c82d92d5ac2acfc03c
          path: gou

      - name: Checkout V8Go
        uses: actions/checkout@v3
        with:
          repository: wwsheng009/v8go
          lfs: true
          path: v8go

      - name: Checkout XGen v1.0
        uses: actions/checkout@v3
        with:
          repository: wwsheng009/xgen
          path: xgen-v1.0

      - name: Checkout Yao-Init
        uses: actions/checkout@v3
        with:
          repository: wwsheng009/yao-init
          path: yao-init

      - name: Move Kun, Xun, Gou, UI, V8Go
        run: |
          mv kun ../
          mv xun ../
          mv gou ../
          mv v8go ../
          mv xgen-v1.0 ../
          mv yao-init ../
          ls -l .
          ls -l ../

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Go ${{ matrix.go }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}

      - name: Setup Go Tools
        run: |
          make tools

      - name: Get Version
        run: |
          echo VERSION=$(cat share/const.go  |grep 'const VERSION' | awk '{print $4}' | sed "s/\"//g")  >> $GITHUB_ENV

      - name: Make Artifacts Linux
        run: |
          make artifacts-linux
          mv dist/release/yao-$VERSION-dev-linux-arm64 dist/release/yao-$VERSION-linux-arm64
          mv dist/release/yao-$VERSION-dev-linux-amd64 dist/release/yao-$VERSION-linux-amd64

      - name: Tar files
        run: tar -czvf yao-${{ env.VERSION }}-release.tar.gz -C dist/release .

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: yao-linux
          path: |
            yao-${{ env.VERSION }}-release.tar.gz
            dist/release/*

      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: yao-${{ env.VERSION }}
          release_name: yao-${{ env.VERSION }}
          draft: true
          prerelease: false

      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: yao-${{ env.VERSION }}-release.tar.gz
          asset_name: yao-linux-${{ env.VERSION }}-release.tar.gz
          asset_content_type: application/gzip

      - uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}